options {
  STATIC = false ;
}


PARSER_BEGIN( MappingParser )
package esl.cuenet.mapper.parser;
public class MappingParser {}
PARSER_END( MappingParser )


void document() : {} { (sexpr())* <EOF> }


void sexpr() : {}  { start_s_expr() operator() (operand())+ end_s_expr() }


void start_s_expr(): {Token t;}    { t=<START_S_EXPR> }

void end_s_expr() : {Token t;}    { t=<END_S_EXPR> }



void operator(): {Token operator;} { operator = <OPERATOR_NAME> { System.out.println("Op -> " + operator.image); } }

void operand(): {Token t=null;} { (t=<OPERAND_NAME> | sexpr()) { if (t!=null) System.out.println("Op -> " + t.image); } }


SKIP    : {  <"//" (~["\n"])* "\n"> }
SKIP 	: { " " | "\t" | "\n" | "\r" }
TOKEN   : { < START_S_EXPR : "(" > }
TOKEN   : { < END_S_EXPR : ")" > }
TOKEN   : { <OPERATOR_NAME : ":" (["a" - "z"]|["A" - "Z"])+ > }
TOKEN   : { <OPERAND_NAME  : (["a" - "z"]|["A" - "Z"]| ["0"-"9"] | "\"" | "-" | "_" | "/" | "@" | ":" | "." | "]" | "[")+ > }
